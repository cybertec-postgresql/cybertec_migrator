#!/usr/bin/env bash

set -e

shopt -s nullglob

RED="\033[0;31m"
GREEN='\033[1;32m'
YELLOW='\033[1;33m'

BOLD='\033[1m'
NC='\033[0m'

function ok {
	printf "[${GREEN}OK${NC}] ${1}\n"
}

function warn {
	printf "[${YELLOW}WARN${NC}] ${1}\n"
}

function error {
	>&2 printf "[${RED}ERROR${NC}] ${1}\n"
	exit ${2}
}

PASSWORD_CHARSET='A-Za-z0-9!&()*+,-./:;<=>?@{|}~'
PASSWORD_LENGTH=32
VERSION='v3.0.0-beta' # VERSION_MARKER

IMAGE_PATH='./images'
ENV_FILE='./.env'

case "${1}" in
"up")
	docker-compose up -d
	;;
"down")
	docker-compose down
	;;
"logs")
	docker-compose logs -f
	;;
"setup")
	password=$(LC_ALL=C tr -dc "${PASSWORD_CHARSET}" </dev/urandom | head -c "${PASSWORD_LENGTH}")

	if [ ! -f ${ENV_FILE} ]; then
		cat <<EOF > .env
# —— User configurable ——
EXTERNAL_HTTP_PORT=80
VERSION=${VERSION}

# —— Internal ⚠ ——
CORE_DB_PASSWORD="${password}"
EOF
		chmod 600 .env
		ok "Generated environment file"
	else
		warn "Environment file already exists"
		echo "Please modify environment file '${ENV_FILE}' manually"
	fi;

	;;
"import")
	if [ -d "${IMAGE_PATH}" ]; then
		for image in ${IMAGE_PATH}/*.tar; do
			docker load --input "${image}"
			image_imported=
		done
	else
		error "Image path does not exist" 2
	fi;

	# POSIX-compliant way of checking if a variable is defined
	if ! set | grep '^image_imported=' >/dev/null 2>&1; then
		warn "No images imported"
	else
		ok "Images imported"
	fi;
	;;
"")
	error "No mode specified" 1
	;;
*)
	error "Unknown mode specified" 1
	;;
esac
