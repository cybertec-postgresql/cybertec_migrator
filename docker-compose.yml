version: "3"

services:
  # Single page application served via nginx web server
  web_gui:
    image: cybertecpostgresql/cybertec_migrator-web_gui:${VERSION}
    depends_on:
      core:
        condition: service_started
    links:
      - core
    volumes:
      - ./docker/templates:/etc/nginx/templates
    ports:
      - ${EXTERNAL_HTTP_PORT}:80

  # Migrator core exposed as REST service API
  core:
    image: cybertecpostgresql/cybertec_migrator-core:${VERSION}
    environment:
      # —— Internal database ——
      - CORE_DB_HOST=core_db
      - CORE_DB_PASSWORD=${CORE_DB_PASSWORD}
      - CORE_DB_DATABASE=migrator
      # —— Job queue ——
      - CORE_QUEUE_HOST=core_queue
    depends_on:
      core_db:
        condition: service_healthy
      core_queue:
        condition: service_started
    links:
      - core_db
      - core_queue

  # Internal Migrator database
  core_db:
    image: postgres:13-alpine
    environment:
      # —— Postgres settings ——
      - POSTGRES_PASSWORD=${CORE_DB_PASSWORD}
    volumes:
      - core_db-data:/var/lib/postgresql/data
      - ./docker/initdb.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=migrator"]
      interval: 2s
      timeout: 5s
      retries: 20

  # Internal Migrator job queue
  core_queue:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  core_db-data:
